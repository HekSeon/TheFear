//=============================================================================
//
// モデル処理 [player.h]
// Author : 
//
//=============================================================================
#pragma once

#include "model.h"


//*****************************************************************************
// マクロ定義
//*****************************************************************************

#define	SWORD_SIZE		(5.0f)				// 当たり判定の大きさ


//*****************************************************************************
// 構造体定義
//*****************************************************************************
struct SWORD
{
	XMFLOAT3		pos;		// ポリゴンの位置
	XMFLOAT3		oldpos;
	XMFLOAT3		rot;		// ポリゴンの向き(回転)
	XMFLOAT3		scl;		// ポリゴンの大きさ(スケール)

	XMFLOAT4X4		mtxWorld;	// ワールドマトリックス

	BOOL			load;
	DX11_MODEL		model;		// モデル情報

	float			dir;		// 向き
	float			size;		// 当たり判定の大きさ
	int				shadowIdx;	// 影のIndex
	BOOL			use;

	// 階層アニメーション用のメンバー変数
	float			time;		// 線形補間用
	int				tblNo;		// 行動データのテーブル番号
	int				tblMax;		// そのテーブルのデータ数

	// 親は、NULL、子供は親のアドレスを入れる(セーブ＆ロードの時は↓ここ気をつける事)

	
};




//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************
HRESULT InitSword(void);
void UninitSword(void);
void UpdateSword(void);
void DrawSword(void);

SWORD* GetSword(void);

void SetSwordPos(XMFLOAT3 offset, float rotX, float rotY, float rotZ);

void AttackNearestEnemy();

